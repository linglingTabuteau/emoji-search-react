[{"/Users/lingling/Desktop/divers/emoji-search-react/src/index.js":"1","/Users/lingling/Desktop/divers/emoji-search-react/src/App.js":"2","/Users/lingling/Desktop/divers/emoji-search-react/src/reportWebVitals.js":"3"},{"size":500,"mtime":1606853193704,"results":"4","hashOfConfig":"5"},{"size":1918,"mtime":1607006325888,"results":"6","hashOfConfig":"5"},{"size":362,"mtime":1606853193705,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"f4ddgf",{"filePath":"11","messages":"12","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"13"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"/Users/lingling/Desktop/divers/emoji-search-react/src/index.js",[],["16","17"],"/Users/lingling/Desktop/divers/emoji-search-react/src/App.js",["18","19","20"],"import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\n\nfunction App() {\n  const [data, setData] = useState([]);\n  const [enterText, setEnterText] = useState(\"\");\n  const [urlImage, setUrlImage] = useState(\"\");\n\n  // use Promise to fetch the data\n  // useEffect(() => {\n  //   fetch(\"https://api.github.com/emojis\")\n  //     .then((res) => res.json())\n  //     .then((result) => {\n  //       let resultArray = Object.entries(result);\n  //       setData(resultArray);\n  //     });\n  // }, []);\n\n  const getData = async function (url) {\n    let response = await fetch(url);\n    let data = await response.json();\n    return data;\n  };\n\n  // use Async And Await to get data\n  useEffect(() => {\n    getData(\"https://api.github.com/emojis\").then((data) => {\n      let resultArray = Object.entries(data);\n      setData(resultArray);\n    });\n  }, []);\n\n  const searchHandler = (e) => {\n    setEnterText(e.target.value);\n  };\n\n  const copyEmojiHandler = (urlImg) => {\n    setUrlImage(urlImg);\n  };\n\n  let newData = data.filter((oneData) => oneData[0].includes(enterText));\n\n  let listItems = newData.map((item) => (\n    <li key={item[0]} onClick={() => copyEmojiHandler(item[1])}>\n      <img src={item[1]} alt={item[0]} />\n      <p>{item[0]}</p>\n      <p className=\"TextColor\">click to copy emoji</p>\n    </li>\n  ));\n\n  let copyEmoji = null;\n  if (urlImage) {\n    copyEmoji = <input src={urlImage} type=\"image\" className=\"ImgWidth\" />;\n  }\n\n  return (\n    <div className=\"App\">\n      <div className=\"Title\">\n        <img src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f638.png?v8\" />{\" \"}\n        <h1>Emoji Search</h1>\n        <img src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f408.png?v8\" />\n      </div>\n      <input value={enterText} onChange={searchHandler} />\n      {copyEmoji}\n      <ul className=\"List-emoji\">{listItems}</ul>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/lingling/Desktop/divers/emoji-search-react/src/reportWebVitals.js",[],{"ruleId":"21","replacedBy":"22"},{"ruleId":"23","replacedBy":"24"},{"ruleId":"25","severity":1,"message":"26","line":53,"column":17,"nodeType":"27","endLine":53,"endColumn":75},{"ruleId":"25","severity":1,"message":"28","line":59,"column":9,"nodeType":"27","endLine":59,"endColumn":94},{"ruleId":"25","severity":1,"message":"28","line":61,"column":9,"nodeType":"27","endLine":61,"endColumn":94},"no-native-reassign",["29"],"no-negated-in-lhs",["30"],"jsx-a11y/alt-text","<input> elements with type=\"image\" must have a text alternative through the `alt`, `aria-label`, or `aria-labelledby` prop.","JSXOpeningElement","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-global-assign","no-unsafe-negation"]